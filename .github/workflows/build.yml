name: build

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Cache node modules for the next time we need to execute the build task
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: "./node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./yarn.lock') }}

      # Pretty much does nothing if valid node modules is restored from cache.
      - name: Install node modules
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: install

      - name: Compile the Solidity code
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: compile

      # Will cache the typechain files and all other artifacts to be used in future tasks.
      - name: Cache the state of the repository
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  lint:
    name: lint
    runs-on: ubuntu-20.04
    needs: ["build"]
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Lint the codebase
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: lint

      # TODO lint commits
  test:
    name: test
    runs-on: ubuntu-20.04
    needs: ["build"]
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      # will run `yarn test` command
      - name: Execute tests
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: test
  # TODO Run slither code analyser

  docs:
    name: docs
    runs-on: ubuntu-20.04
    needs: ["test", "lint"]
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Markdown doc gen
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: hardhat docgen

      - name: Deploy docs
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFIG_FILE: mkdocs.yml
          EXTRA_PACKAGES: build-base
          REQUIREMENTS: requirements.txt

  # TODO Publish smart contract artifacts to github
